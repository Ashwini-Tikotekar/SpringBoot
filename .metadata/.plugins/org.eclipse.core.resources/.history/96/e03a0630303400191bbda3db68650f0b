package com.bridgelabz.Fundoonotes.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.bridgelabz.Fundoonotes.model.NoteDetails;
import com.bridgelabz.Fundoonotes.service.NoteService;

@Controller
@RequestMapping("/users")
public class NoteController {

	@Autowired
	private NoteService noteService;

	@PostMapping("/createnote")
	public ResponseEntity<?> createNote(@RequestHeader ("token")String token,@RequestBody NoteDetails note, HttpServletRequest request,HttpServletResponse response) {        
		if (noteService.createNote(token,note, request)!=null)
			return new ResponseEntity<String>("Note Succesfully Created",HttpStatus.OK);
		else
			return new ResponseEntity<String>("pls provide details correctly",HttpStatus.CONFLICT);

	}

	@PostMapping(value = "/updatenote")
	public ResponseEntity<String> updateNote( @RequestHeader("token") String token,@RequestParam("noteId") int id,@RequestBody NoteDetails note, HttpServletRequest request) {

		NoteDetails newNote=noteService.updateNote(token,id, note, request);
		if (newNote!=null) {
			return new ResponseEntity<String>("Note Succesfully updated",HttpStatus.OK);
		} else {

			return new ResponseEntity<String>("Note cannot be updated",HttpStatus.BAD_REQUEST);
		}
	}
	
	@GetMapping(value = "/retrieve")
	public ResponseEntity<?> retrieve(@RequestHeader(value = "token") String token, HttpServletRequest request) {
	List<NoteDetails> notes = noteService.retrieveNote(token, request);
	return new ResponseEntity<List<NoteDetails>>(notes,HttpStatus.OK);

	}
	 

}


