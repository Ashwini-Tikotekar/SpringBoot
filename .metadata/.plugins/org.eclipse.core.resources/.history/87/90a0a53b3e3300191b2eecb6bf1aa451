package com.bridgelabz.Fundoonotes.service;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.bridgelabz.Fundoonotes.dao.UserDetailsRepoistory;
import com.bridgelabz.Fundoonotes.model.UserDetails;
import com.bridgelabz.Fundoonotes.utility.EmailUtility;
import com.bridgelabz.Fundoonotes.utility.TokenGenerator;

@Service
public class UserServiceImpl implements UserService{
@Autowired
 private UserDetailsRepoistory userdetailsrepoistory;

@Autowired
private UserDetailsRepoistory userDao;
@Autowired
private TokenGenerator tokenGenerator;

@Autowired
private PasswordEncoder bcryptEncoder;
@Autowired
private EmailUtility emailUtilility;


@Override
public UserDetails register(UserDetails user) {
	return userdetailsrepoistory.save(user);
}
@Transactional
public UserDetails activateUser(String token, HttpServletRequest request) {
       int id=tokenGenerator.VerifyToken(token);
       UserDetails user=userDao.getUserById(id);
       if(user!=null)
       {
           user.setActivate_status(true);
           userDao.updateUser(token, user);
       }
       return user;
   }

@Override
public UserDetails login(UserDetails user) {
	return userdetailsrepoistory.findemailById(user);
}


}
